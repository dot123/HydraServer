// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"HydraServer/gameserver/logic"
	"HydraServer/gameserver/models"
	"HydraServer/gameserver/services"
	"HydraServer/pkg/cache"
	"HydraServer/pkg/redisbackend"
	"github.com/sirupsen/logrus"
	"github.com/topfreegames/pitaya/v2"
)

// Injectors from wire.go:

func BuildInjector(pitayaPitaya *pitaya.Pitaya, redisBackend *redisbackend.RedisBackend, fieldLogger logrus.FieldLogger) (*Injector, func(), error) {
	db, cleanup, err := InitGormDB()
	if err != nil {
		return nil, nil, err
	}
	cacheCache := cache.NewCache(redisBackend, fieldLogger)
	roleDBMgr := models.NewRoleDBMgr(db, cacheCache, fieldLogger)
	roleLogic := logic.NewRoleLogic(pitayaPitaya, roleDBMgr)
	roleRemote := services.NewRoleRemoteService(pitayaPitaya, cacheCache, roleDBMgr, fieldLogger)
	role := services.NewRoleService(pitayaPitaya, roleLogic, roleRemote)
	injector := &Injector{
		RoleService:       role,
		RoleRemoteService: roleRemote,
		App:               pitayaPitaya,
		Log:               fieldLogger,
	}
	return injector, func() {
		cleanup()
	}, nil
}
